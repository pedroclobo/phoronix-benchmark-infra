#!/bin/bash

# Remove blacklisted compiler flags
blacklist="\
  :-V \
  :-Wall \
  :-Werror \
  :-Wextra \
  :-fprofile-correction \
  :-fprofile-use \
  :-march=rv64gcv1p0 \
  :-matomics \
  :-menable-experimental-extensions \
  :-mno-avx256-split-unaligned-load \
  :-mno-avx256-split-unaligned-store \
  :-pedantic \
  :-wd654 \
  "
args=""

# Skip test commands
for arg in "$@"; do
  case "$arg" in
    -V|-v|--version|-qversion|-dumpmachine|-print-prog-name=*|-print-search-dirs|-print-multi-os-directory|*conftest.cpp|*conftest.o)
      ${LLVM_PATH}/clang "$@"
      exit $?
      ;;
  esac
done

for arg in "$@"; do
  if ! echo "$blacklist" | grep -q ":$arg:"; then
    args="$args $arg"
  fi
done

# Replace optimization levels with $OPT_FLAG
args=$(echo "$args" | sed -E "s/-O[0-3sz]/$OPT_FLAG/g")

start_time=$(date +%s%3N)

# Measure peak memory usage
MEM_DIR=$RESULTS_REPO/memory-usage/${basename}/${CONFIG_NAME}/$(echo $OPT_FLAG | tr -d -)
[ ! -d $MEM_DIR ] && mkdir -p $MEM_DIR
MEM_FILE=$MEM_DIR/$INSTALL_ROUND.txt
/usr/bin/time -pf '%M' -o $MEM_FILE -a ${LLVM_PATH}/clang++ $args ${FLAGS}
exit_code=$?

# Log inline remarks
INLINE_REMARKS_DIR=$RESULTS_REPO/inline-remarks/${basename}/${CONFIG_NAME}
[ ! -d $INLINE_REMARKS_DIR ] && mkdir -p $INLINE_REMARKS_DIR
INLINE_REMARKS_PROCESS_FILE=$INLINE_REMARKS_DIR/$(echo $OPT_FLAG | tr -d -)_$$.txt
INLINE_REMARKS_FILE=$INLINE_REMARKS_DIR/$(echo $OPT_FLAG | tr -d -).txt
INLINE_REMARKS_LOCK=$INLINE_REMARKS_DIR/$(echo $OPT_FLAG | tr -d -).lock
${LLVM_PATH}/clang++ $args ${FLAGS} -Rpass=inline 2>> $INLINE_REMARKS_PROCESS_FILE
sed -i "/remark:/!d" $INLINE_REMARKS_PROCESS_FILE
(
    flock -x 200
    cat $INLINE_REMARKS_PROCESS_FILE >> "$INLINE_REMARKS_FILE"
    rm -f $INLINE_REMARKS_PROCESS_FILE
) 200>"$INLINE_REMARKS_LOCK"

# Log compiler invocations
COMPILER_LOG_DIR=$RESULTS_REPO/compiler-logs/${basename}/${CONFIG_NAME}
[ ! -d $COMPILER_LOG_DIR ] && mkdir -p $COMPILER_LOG_DIR
COMPILER_LOG_FILE=$COMPILER_LOG_DIR/$(echo $OPT_FLAG | tr -d -).txt
echo "${LLVM_PATH}/clang++ $args ${FLAGS}" >> $COMPILER_LOG_FILE

# Measure elapsed time (compile time)
end_time=$(date +%s%3N)
elapsed_time=$((end_time - start_time))
TIME_DIR=$RESULTS_REPO/compile-time/${basename}/${CONFIG_NAME}/$(echo $OPT_FLAG | tr -d -)
[ ! -d $TIME_DIR ] && mkdir -p $TIME_DIR
TIME_FILE=$TIME_DIR/$INSTALL_ROUND.txt
echo -e "${LLVM_PATH}/clang++ $args ${FLAGS}\t$elapsed_time" >> $TIME_FILE

exit $exit_code
